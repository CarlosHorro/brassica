= javascript_include_tag "plotly"

- if @analysis.finished?
  %ul.analysis-nav.nav.nav-pills{ role: :tablist }
    - if @analysis.success?
      %li.active= link_to("Results", '#analysis_results', role: :tab, data: { toggle: :tab })
      %li= link_to("Output files", '#analysis_outputs', role: :tab, data: { toggle: :tab })

    %li{ class: (:active if @analysis.failure?) }
      = link_to("Std output", '#analysis_std_out', role: :tab, data: { toggle: :tab })

    %li= link_to("Std error", '#analysis_std_err', role: :tab, data: { toggle: :tab })

  .tab-content.clearfix
    - if @analysis.success?
      #analysis_results.tab-pane.active{ role: :tabpanel }
        #gwas-manhattan-plot.hidden{ data: @manhattan }

        %table.table.table-condensed.table-hover.data-table
          %thead
            %tr
              %th SNP
              %th Chromosome
              %th Position
              %th -log<sub>10</sub>(P)
              %th Trait

          %tbody
            - @manhattan[:traits].each do |trait_name, mutations, _|
              - mutations.each.with_index do |mutation|
                %tr
                  %td= mutation[0]
                  %td= mutation[2]
                  %td= mutation[3]
                  %td= "%.4f" % mutation[1]
                  %td= trait_name

      #analysis_outputs.tab-pane{ role: :tabpanel }
        .panel.panel-default
          %ul.list-group
            - @analysis.data_files.output.gwas_results.each do |data_file|
              %li.list-group-item= link_to data_file.file_file_name, data_file.file.url

    #analysis_std_out.tab-pane{ class: (:active if @analysis.failure?),  role: :tabpanel }
      - if (std_out = @analysis.std_out.file).size > 0
        .std-out
          .actions
            = link_to "Download", std_out.url, target: "_blank", class: 'btn btn-default'

          - if std_out.size > 50.kilobytes
            .alert.alert-info
              Showing first 50 KiB of #{std_out.size / 1.kilobyte} KiB.

          %pre= read_file(std_out.path, limit: 50.kilobytes)

      - else
        .alert.alert-info Standard output empty

    #analysis_std_err.tab-pane{ role: :tabpanel }
      - if (std_err = @analysis.std_err.file).size > 0
        .std-err
          .actions
            = link_to "Download", std_err.url, target: "_blank", class: 'btn btn-default'

          - if std_err.size > 50.kilobytes
            .alert.alert-info
              Showing first 50 KiB of #{std_err.size / 1.kilobyte} KiB.

          %pre= read_file(std_err.path, limit: 50.kilobytes)

      - else
        .alert.alert-info Standard error empty

